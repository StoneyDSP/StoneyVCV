name: node

on:
  # Runs on all pushes
  push:
  # # A push is made to a GitHub Pages-enabled branch
  # page_build:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# When pushing new commits, cancel any running builds on that branch
concurrency:
  group: ubuntu-latest-${{ github.ref }}
  cancel-in-progress: true

env:
  DISPLAY: :0
  SCCACHE_GHA_ENABLED: "true"
  RACK_SDK_VERSION: 2.5.2
  RACK_SDK_PLATFORM: "lin-x64"
  RACK_DIR: ${{ github.workspace }}/dep/Rack-SDK

jobs:
  ubuntu:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout StoneyVCV code
      uses: actions/checkout@v4
      with:
        submodules: true
        
      # https://vcvrack.com/manual/Building#Setting-up-your-development-environment
    - name: Install VCV's Linux Deps
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update && sudo apt install unzip git gdb curl cmake libx11-dev libglu1-mesa-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev zlib1g-dev libasound2-dev libgtk2.0-dev libgtk-3-dev libjack-jackd2-dev jq zstd libpulse-dev pkg-config
        sudo /usr/bin/Xvfb $DISPLAY &
        curl https://vcvrack.com/downloads/Rack-SDK-${{env.RACK_SDK_VERSION}}-${{env.RACK_SDK_PLATFORM}}.zip -o ./dep/Rack-SDK-${{env.RACK_SDK_VERSION}}-${{env.RACK_SDK_PLATFORM}}.zip
        cd dep
        unzip Rack-SDK-${{env.RACK_SDK_VERSION}}-${{env.RACK_SDK_PLATFORM}}.zip
        cd ..

    - name: Set Up Build Cache
      uses: mozilla-actions/sccache-action@v0.0.4

    - name: Build
      run: make

    - name: Install
      run: make install

#     - name: Test
#       run: ???

    - name: Dist
      run: make dist

    - name: Upload Build
      uses: actions/upload-artifact@v4
      with:
        name: StoneyVCV-2.0.0-lin-x64.vcvplugin
        path: '${{ github.workspace }}/dist/StoneyVCV-2.0.0-lin-x64.vcvplugin

    - name: Get Artifacts
      uses: actions/download-artifact@v4
